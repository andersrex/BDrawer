// Generated by CoffeeScript 1.4.0
(function() {

  window.BDrawer = (function() {

    function BDrawer(options) {
      var style;
      if (!(options.content && options.drawer)) {
        return null;
      }
      this.content = options.content;
      this.drawer = options.drawer;
      this.speed = options.speed || 300;
      this.overlap = options.overlap || 60;
      this.openable = options.openable || true;
      this.prevented = options.prevented || {
        y1: false,
        y2: false
      };
      this.closed = options.closed || true;
      this.options = options || {};
      this.width = this.content.getBoundingClientRect().width;
      style = this.content.style;
      style.display = 'block';
      style.position = 'fixed';
      style.left = '0px';
      style.top = '0px';
      style.zIndex = 1000;
      style.width = this.width + 'px';
      style = this.drawer.style;
      style.display = 'block';
      style.position = 'fixed';
      style.left = '0px';
      style.top = '0px';
      style.zIndex = 900;
      style.width = this.width + 'px';
      this.mask = document.createElement('div');
      style = this.mask.style;
      style.position = 'absolute';
      style.display = 'block';
      style.width = '100%';
      style.height = '100%';
      style.left = 0;
      style.top = '50px';
      style.zIndex = 1000;
      style.visibility = 'hidden';
      style.opacity = 0;
      style.background = 'black';
      this.content.appendChild(this.mask);
      this.content.addEventListener('webkitTransitionEnd', this, false);
      this.content.addEventListener('touchstart', this, false);
      this.content.addEventListener('touchmove', this, false);
      this.content.addEventListener('touchend', this, false);
      this.mask.addEventListener('click', this, false);
    }

    BDrawer.prototype.handleEvent = function(e) {
      switch (e.type) {
        case "touchstart":
          return this._touchStart(e);
        case "touchmove":
          return this._touchMove(e);
        case "touchend":
          return this._touchEnd(e);
        case "click":
          return this.close();
      }
    };

    BDrawer.prototype.open = function() {
      this._move(this.width - this.overlap, this.speed);
      this._showMask();
      return this.closed = false;
    };

    BDrawer.prototype.close = function() {
      this._move(0, this.speed);
      this._hideMask();
      return this.closed = true;
    };

    BDrawer.prototype.toggle = function() {
      if (this.closed) {
        return this.open();
      } else {
        return this.close();
      }
    };

    BDrawer.prototype._showMask = function() {
      return this.mask.style.visibility = 'visible';
    };

    BDrawer.prototype._hideMask = function() {
      return this.mask.style.visibility = 'hidden';
    };

    BDrawer.prototype._move = function(dx, speed) {
      var style;
      if (this.openable) {
        style = this.content.style;
        style.webkitTransitionDuration = speed + 'ms';
        return style.webkitTransform = 'translate3d(' + dx + 'px, 0, 0)';
      }
    };

    BDrawer.prototype._touchStart = function(e) {
      this._x = e.touches[0].pageX;
      this._y = e.touches[0].pageY;
      this._start = Number(new Date());
      return this._dx = 0;
    };

    BDrawer.prototype._touchMove = function(e) {
      if (e.touches.length > 1 || e.scale && e.scale !== 1) {
        return;
      }
      this._dx = e.touches[0].pageX - this._x;
      if (this.closed) {
        if (this.openable) {
          if (!this._touchPrevented()) {
            if (this._dx < 0) {
              this._dx = 0;
            }
            return this._move(this._dx, 0);
          }
        }
      } else {
        if (this._dx > 0) {
          this._dx = 0;
        }
        if (this._dx + this.width - this.overlap < 0) {
          this._dx = -this.width + this.overlap;
        }
        return this._move(this._dx + this.width - this.overlap, 0);
      }
    };

    BDrawer.prototype._touchEnd = function(e) {
      var validSwipe;
      if (this._touchPrevented()) {
        return;
      }
      if (this._dx === 0) {
        return;
      }
      validSwipe = Number(new Date()) - this.start < 200 || Math.abs(this._dx) > (this.width - this.overlap) / 2;
      if (validSwipe) {
        if (this._dx > 0) {
          return this.open();
        } else {
          return this.close();
        }
      } else {
        if (this._dx > 0) {
          return this.close();
        } else {
          return this.open();
        }
      }
    };

    BDrawer.prototype._touchPrevented = function() {
      var y1, y2;
      y1 = this.prevented.y1;
      y2 = this.prevented.y2;
      if (y1 === false || this._y < y1 || y2 === false || this._y > y2) {
        return false;
      } else {
        return true;
      }
    };

    return BDrawer;

  })();

}).call(this);
